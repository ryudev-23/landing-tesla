---
import Logo from './Logo.astro'
import HelpIcon from './icons/Help.astro'
import WorldIcon from './icons/World.astro'
import ProfileIcon from './icons/Profile.astro'
---
<header 
    id="landing-header"
	class="pt-0 pb-8 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
	>
		<div class="flex flex-grow">
			<Logo />
		</div>
		<nav>
			<ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
				<li><a href="#">Vehiculos</a></li>
				<li><a href="#">Energia</a></li>
				<li><a href="#">Carga</a></li>
				<li><a href="#">Descubrir</a></li>
			</ul>
		</nav>
		<nav class="flex flex-grow justify-end basis-0">
			<ul class="flex [&>li>a]:inline-block [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:px-4 [&>li>a]:py-2">
				<li><a href="#">
					<HelpIcon class="size-7" />
				</a></li>
				<li><a href="#">
					<WorldIcon class="size-7" />
				</a></li>
				<li><a href="#">
					<ProfileIcon class="size-7" />
				</a></li>
			</ul>
		</nav>
		<div
			id="menu-backdrop"
			class={`
			absolute bg-black/5 backdrop-blur-lg rounded
			translate-x-[var(--left)] translate-y-[var(--top)]
			left-0 top-0
			w-[var(--width)] h-[var(--height)]
			transition-all duration-500
			ease-in-out opacity-0 -z-10
			`}
		/>
    </header>

	<script>
		const listItem = document.querySelectorAll('#landing-header li')
		const menuBackdrop = document.querySelector('#menu-backdrop') as HTMLElement

		listItem.forEach((item) => {
			item.addEventListener('mouseenter', () => {
				const { left, top, width, height } = item.getBoundingClientRect()
				const { clientHeight, clientWidth } = item

				console.log({ left, top, width, height })
				console.log({ clientHeight, clientWidth })

				menuBackdrop.style.setProperty('--left', `${left}px`)
				menuBackdrop.style.setProperty('--top', `${top}px`)
				menuBackdrop.style.setProperty('--width', `${width}px`)
				menuBackdrop.style.setProperty('--height', `${height}px`)
				
				menuBackdrop.style.opacity = '1'
				menuBackdrop.style.visibility = 'visible'
			})

			item.addEventListener('mouseleave', () => {
				menuBackdrop.style.opacity = '0'
				menuBackdrop.style.visibility = 'hidden'
			})
		})
	</script>

    <script>
        const $header = document.querySelector('#landing-header') as HTMLElement | null;
		if ($header) {
			const observerOptions = {
				root: null,
				rootMargin: '0px', // en cuanto se vea el elemento
				threshold: 0.9 // 50% de visibilidad
			}

			const observer = new IntersectionObserver((entries) => {
				entries.forEach((entry) => {
					const { isIntersecting } = entry
					if (isIntersecting) {
						const color = entry.target.getAttribute('data-header-color')
						if (color) {
								$header.style.color = color;
							} else {
								console.error('El atributo data-header-color no se encontró.');
							}
					}
				})
			}, observerOptions)

			const $sections = document.querySelectorAll('.landing-section') 
			$sections.forEach((section) => observer.observe(section))
		}else {
            console.error('El elemento #landing-header no se encontró en el DOM.');
        }
    </script>